name: "CI/CD - LojaGamer (Build, Push to ECR)"

on:
  push:
    branches: [ "main", "master" ]
  pull_request:
    branches: [ "main", "master" ]

env:
  AWS_REGION: ${{ secrets.AWS_REGION }}
  AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
  ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
  IMAGE_TAG: ${{ github.sha }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: 📦 Checkout do código
        uses: actions/checkout@v4

      - name: 🧱 Configurar .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "8.0.x"

      - name: 🔧 Restaurar dependências
        run: dotnet restore LojaGamer/LojaGamer.csproj

      - name: 🏗️ Build do projeto
        run: dotnet build LojaGamer/LojaGamer.csproj --configuration Release --no-restore

      # Removido o passo de testes pois você pediu
      #- name: 🧪 Rodar testes
      #  run: dotnet test LojaGamer/Tests/ --no-build --verbosity normal

      - name: 🔑 Configurar credenciais AWS
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: 🐳 Login no Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2

      - name: 🏗️ Build e Push da imagem Docker
        env:
          ECR_URI: "${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.ECR_REPOSITORY }}"
        run: |
          echo "Building Docker image..."
          docker build -f LojaGamer/LojaGamer/Dockerfile -t $ECR_URI:${{ env.IMAGE_TAG }} .
          docker tag $ECR_URI:${{ env.IMAGE_TAG }} $ECR_URI:latest

          echo "Pushing Docker image to ECR..."
          docker push $ECR_URI:${{ env.IMAGE_TAG }}
          docker push $ECR_URI:latest

      - name: ✅ Finalização
        run: echo "Imagem publicada com sucesso no ECR!"

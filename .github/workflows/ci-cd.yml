name: "CI/CD â†’ Build, Test, Push to ECR"

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  AWS_REGION: ${{ secrets.AWS_REGION }}
  AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
  ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
  IMAGE_TAG: ${{ github.sha }}

jobs:
  build-test:
    name: Build and Test (.NET)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Restore
        run: dotnet restore LojaGamer/LojaGamer.csproj

      - name: Build
        run: dotnet build LojaGamer/LojaGamer.csproj --configuration Release --no-restore

      - name: Test
        run: dotnet test LojaGamer/LojaGamer.csproj --no-build --verbosity normal

  docker-push-ecr:
    name: Build Docker image & Push to ECR
    needs: build-test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Configurar credenciais AWS (usando Access Key + Secret + Session Token)
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to ECR
        uses: aws-actions/amazon-ecr-login@v1

      - name: Ensure ECR repository exists
        env:
          ECR_REPOSITORY: ${{ env.ECR_REPOSITORY }}
        run: |
          aws ecr describe-repositories --repository-names "$ECR_REPOSITORY" || \
            aws ecr create-repository --repository-name "$ECR_REPOSITORY"

      - name: Build Docker image
        env:
          AWS_REGION: ${{ env.AWS_REGION }}
          AWS_ACCOUNT_ID: ${{ env.AWS_ACCOUNT_ID }}
          ECR_REPOSITORY: ${{ env.ECR_REPOSITORY }}
          IMAGE_TAG: ${{ env.IMAGE_TAG }}
        run: |
          ECR_URI="${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/${ECR_REPOSITORY}"
          echo "ECR URI: $ECR_URI"

          docker build -f LojaGamer/Dockerfile -t "$ECR_URI:$IMAGE_TAG" .

          docker tag "$ECR_URI:$IMAGE_TAG" "$ECR_URI:latest"

          docker push "$ECR_URI:$IMAGE_TAG"
          docker push "$ECR_URI:latest"

      - name: Output pushed image URI
        run: echo "Pushed image: ${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }}"

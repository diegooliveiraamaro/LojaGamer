name: CI/CD LojaGamer

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-test:
    name: Build e Testes
    runs-on: ubuntu-latest

    steps:
      - name: Checar código do repositório
        uses: actions/checkout@v3

      - name: Configurar .NET 8
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 8.0.x

      - name: Restaurar pacotes
        run: dotnet restore LojaGamer/LojaGamer.csproj

      - name: Build
        run: dotnet build LojaGamer/LojaGamer.csproj --configuration Release --no-restore

      - name: Testes
        run: dotnet test LojaGamer/LojaGamer.csproj --no-build --verbosity normal

  docker-build-push:
    name: Build e Push Docker
    needs: build-test
    runs-on: ubuntu-latest

    steps:
      - name: Checar código
        uses: actions/checkout@v3

      - name: Login no DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build da imagem Docker
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/lojagamer:latest .

      - name: Push da imagem Docker
        run: |
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/lojagamer:latest

  deploy-aws:
    name: Deploy AWS ECS
    needs: docker-build-push
    runs-on: ubuntu-latest

    steps:
      - name: Configurar AWS CLI
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: sa-east-1

      - name: Atualizar serviço ECS
        run: |
          aws ecs update-service \
            --cluster LojaGamerCluster \
            --service LojaGamerService \
            --force-new-deployment
